server.port=10000
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/bookings_db
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.type=com.zaxxer.hikari.HikariDataSource

spring.batch.jdbc.initialize-schema=always
spring.jpa.hibernate.ddl-auto= none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

spring.liquibase.change-log=classpath:/changelog/init-db.sql


#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer

spring.application.name=bookings
spring.config.import=optional:configserver:http://localhost:8071/
management.endpoints.web.exposure.include=*

eureka.instance.preferIpAddress = true 
eureka.client.registerWithEureka = true
eureka.client.fetchRegistry = true
eureka.client.serviceUrl.defaultZone = http://localhost:8070/eureka/

spring.kafka.bootstrap-servers=localhost:9092
booking.topic.name=booking_topic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=msg:com.carpark.bookings.dtos.BookingMsg

spring.zipkin.sender.type: kafka

management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.metrics.distribution.percentiles-histogram.http.server.requests=true
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

#Resilinece4j Properties
resilience4j.circuitbreaker.instances.booking.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.booking.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.booking.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.booking.slidingWindowSize=5
resilience4j.circuitbreaker.instances.booking.failureRateThreshold=50
resilience4j.circuitbreaker.instances.booking.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.booking.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.booking.automaticTransitionFromOpenToHalfOpenEnabled=true


#Resilience4J Timeout Properties
resilience4j.timelimiter.instances.booking.timeout-duration=60s

#Resilience4J Retry Properties
resilience4j.retry.instances.booking.max-attempts=3
resilience4j.retry.instances.booking.wait-duration=10s